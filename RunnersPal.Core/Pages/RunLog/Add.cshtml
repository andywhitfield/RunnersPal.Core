@page
@model RunLog.AddModel

<aside>
    <vc:user-nav />
</aside>

<article>
    <h1>Log a new run</h1>
    <form name="rp-runlog" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="distancetype" value="">
    <input type="hidden" name="distancemanual" value="">
    <input type="hidden" name="routeid" value="">
    <div id="rp-runlog-main">
    <div>
        <label for="rp-runlog-date">Date:</label>
        <input type="text" id="rp-runlog-date" name="date" class="rp-runlog-date" value="@Model.Date" />
    </div>
    <div>
        <label>Distance:</label>
        <button type="button" name="rp-distance-select">Pick a route...</button>
        <input type="text" name="rp-distance-selected" readonly />
        <button type="button" name="rp-distance-selected-edit">Edit...</button>
    </div>
    <div>
        <label for="rp-runlog-timetaken">Time taken:</label>
        <input type="text" id="rp-runlog-timetaken" name="timetaken" class="rp-runlog-timetaken" />
        <small>(hh:)mm:ss</small>
    </div>
    <div class="rp-pace">
        <label></label>
        <span></span>
    </div>
    <div>
        <label for="rp-runlog-comment">Comment:<br/><small>(optional)</small></label>
        <textarea id="rp-runlog-comment" name="comment" class="rp-runlog-comment" wrap="off"></textarea>
    </div>
    <div>
        <label></label>
        <input type="submit" name="add" value="Add" />
        <button type="submit" name="cancel" value="cancel">Cancel</button>
    </div>
    </div>

    <div id="rp-runlog-distance">
    <div id="rp-distance">
        <ul>
            <li><a href="#tab-1">Common routes</a></li>
            <li><a href="#tab-2">My routes</a></li>
            <li><a href="#tab-3">Find a route</a></li>
            <li><a href="#tab-4">Map a new route</a></li>
            <li><a href="#tab-5">Enter a distance</a></li>
        </ul>

        <div id="tab-1">
            <ul>
                @foreach (var systemRoute in Model.SystemRoutes) {
                <li><a href="#" data-routetype="1" data-routeid="@systemRoute.Id">@systemRoute.Name</a></li>
                }
            </ul>
            <div>
            <button name="rp-distance-select-cancel" type="button">Cancel</button>
            </div>
        </div>
        <div id="tab-2">
            <ul>
                <li>My route 1</li>
                <li>My route 2</li>
            </ul>
            <div>
            <button name="rp-distance-select-cancel" type="button">Cancel</button>
            </div>
        </div>
        <div id="tab-3">
            Find box:
        </div>
        <div id="tab-4">
            Map control
            <div>
            <button name="rp-distance-select-map-ok" type="button">OK</button>
            <button name="rp-distance-select-cancel" type="button">Cancel</button>
            </div>
        </div>
        <div id="tab-5">
            <label>Manual distance:</label>
            <input type="text" name="rp-distance-select-manual-value" />
            km
            <div>
            <label></label>
            <button name="rp-distance-select-manual-ok" type="button">OK</button>
            <button name="rp-distance-select-cancel" type="button">Cancel</button>
            </div>
        </div>
    </div>
    </div>
    </form>
</article>
@section Head {
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/thedatepicker@2.4.0/dist/the-datepicker.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/responsive-tabs@1.6.3/css/responsive-tabs.min.css">
<environment names="Development">
<link rel="stylesheet" href="/css/responsive-tabs.css" asp-append-version="true" />
</environment>
<environment names="Staging,Production">
<link rel="stylesheet" href="/css/responsive-tabs.min.css" asp-append-version="true" />
</environment>
}
@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/responsive-tabs@1.6.3/js/jquery.responsiveTabs.min.js" integrity="sha256-cTeYby7c1UOyfhJPAcRhH6n8U0N5FoOB4g4atuw5+/Q=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/thedatepicker@2.4.0/dist/the-datepicker.min.js" integrity="sha256-c5E6Y8HrRw6sNkkT4EWZ+lbI7G7XVNS+kVcG2VAAgqA=" crossorigin="anonymous"></script>
<script type="text/javascript">
$('#rp-distance').responsiveTabs({
    startCollapsed: 'accordion'
});

const runlogDatepicker = new TheDatepicker.Datepicker(document.getElementById('rp-runlog-date'));
runlogDatepicker.options.setTitle('Run date');
runlogDatepicker.options.classNames.setClassName(TheDatepicker.ClassNameType.HeaderTitleContent, "rp-runlog-datepicker-title");
runlogDatepicker.options.setInputFormat('Y-m-d');
runlogDatepicker.options.setAllowEmpty(false);
runlogDatepicker.render();

const runLogMainForm = $('#rp-runlog-main');
const runLogDistanceSelector = $('#rp-runlog-distance');
const runLogDistanceType = $('form[name="rp-runlog"] input[name="distancetype"]');
runLogDistanceSelector.hide();
const runLogDistanceManual = $('form[name="rp-runlog"] input[name="distancemanual"]');
const runLogRouteId = $('form[name="rp-runlog"] input[name="routeid"]');
const runLogDistanceSelection = $('form[name="rp-runlog"] button[name="rp-distance-select"]');
const runLogDistanceSelected = $('form[name="rp-runlog"] input[name="rp-distance-selected"]');
const runLogDistanceSelectedEdit = $('form[name="rp-runlog"] button[name="rp-distance-selected-edit"]');
runLogDistanceSelected.hide();
runLogDistanceSelectedEdit.hide();
runLogDistanceSelection.click(function() {
    runLogDistanceSelector.show();
    runLogMainForm.hide();
});
runLogDistanceSelectedEdit.click(function() {
    runLogDistanceSelector.show();
    runLogMainForm.hide();
});
$('form[name="rp-runlog"] button[name="rp-distance-select-cancel"]').click(function() {
    runLogMainForm.show();
    runLogDistanceSelector.hide();

    $('form[name="rp-runlog"] input[name="rp-distance-select-manual-value"]').val(runLogDistanceManual.val());
});
$('form[name="rp-runlog"] button[name="rp-distance-select-manual-ok"]').click(function() {
    runLogDistanceType.val('2');
    runLogDistanceManual.val($('form[name="rp-runlog"] input[name="rp-distance-select-manual-value"]').val());
    runLogDistanceSelected.val($('form[name="rp-runlog"] input[name="rp-distance-select-manual-value"]').val() + ' km');
    runLogDistanceSelected.show();
    runLogDistanceSelectedEdit.show();
    runLogDistanceSelection.hide();
    runLogMainForm.show();
    runLogDistanceSelector.hide();
    updateRunPace();
});
$('form[name="rp-runlog"] a[data-routeid][data-routetype]').click(function() {
    runLogDistanceType.val($(this).attr('data-routetype'));
    runLogRouteId.val($(this).attr('data-routeid'));
    runLogDistanceSelected.val($(this).text());
    runLogDistanceSelected.show();
    runLogDistanceSelectedEdit.show();
    runLogDistanceSelection.hide();
    runLogMainForm.show();
    runLogDistanceSelector.hide();
    updateRunPace();
});
const runLogPace = $('.rp-pace');
const runLogTimeTaken = $('form[name="rp-runlog"] input[name="timetaken"]');
runLogPace.hide();
runLogTimeTaken.on('input', updateRunPace);
function updateRunPace() {
    console.log('Calculating pace for time ' + runLogTimeTaken.val() + ', distance type ' + runLogDistanceType.val() + ', distance ' + runLogDistanceManual.val() + ', routeid ' + runLogRouteId.val());
    $.getJSON('/api/calculator/pace', {
        timeTaken: runLogTimeTaken.val(),
        distanceType: runLogDistanceType.val(),
        distanceManual: runLogDistanceManual.val(),
        routeId: runLogRouteId.val()
    })
        .done(function(data) {
            console.log('pace returned: ' + data.pace);
            $('span', runLogPace).text(data.pace);
            runLogPace.show();
        })
        .fail(function() {
            console.log('failed calculating pace, hiding pace');
            runLogPace.hide();
        });
}
</script>
}

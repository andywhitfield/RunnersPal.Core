@model RunnersPal.Core.ViewModels.CaloriesCalculatorModel
@{
    ViewBag.Title = "Calories Calculator";
    ViewBag.SelectedTab = "Calculators";
}
<script type="text/javascript">
    $(function () {
        var model = new CalorieCalcModel('@Url.Action("calccalories", "calculators")', '@Url.Action("calcweight", "calculators")');
        model.distanceUnits("@Context.UserDistanceUnits("a")");
        model.distanceUnitsSingular("@Context.UserDistanceUnits("a.s")");
        model.weightUnits("@(Model.Weight.Units)");
        model.weightKg(@(Model.Weight.Kg));
        model.weightLbs(@(Model.Weight.Lbs));
        model.weightSt(@(Model.Weight.St));
        model.weightStLbs(@(Model.Weight.StLbs));
        model.priorWeightUnits("@(Model.Weight.Units)");

        $('#distance').focus();
        $('#toggleDistUnits').click(function() { unitsModel.toggle(); });
        $('#distanceHalfMarathon').click(function() { model.distanceHalfMarathon(); });
        $('#distanceMarathon').click(function() { model.distanceMarathon(); });
        unitsModel.change(function(u) { model.updateDistanceUnits('@Url.Action("calcdistance", "calculators")', unitsModel, u == @((int)RunnersPal.Core.Models.DistanceUnits.Miles)); });

        ko.applyBindings(model);
    });
</script>

<h1>Calories Burned Calculator</h1>

<p>
Get a rough idea how many calories you burnt during your last run. The actual number of
calories burnt will vary depending on the intensity of your run, but this is a simple and
interesting guide to see how many miles you need to run to lose those pounds!
</p>

<div class="grid">
	<div class="grid-row">
		<div class="grid-cell grid-cell-20">Distance:</div>
		<div class="grid-cell-last grid-cell-80"><input type="number" min="0.0" step="any" data-bind="value: distance, valueUpdate: 'afterkeydown'" id="distance" /> <span data-bind="text: distanceUnits" class="distanceUnits">miles</span> (<button id="toggleDistUnits" title="Toggle between miles and kilometers">toggle</button>)<br /><button id="distanceHalfMarathon">half-marathon</button> <button id="distanceMarathon">marathon</button></div>
		<div class="grid-cell-end"></div>
	</div>
    <div class="grid-row grid-row-separator"></div>
	<div class="grid-row">
		<div class="grid-cell grid-cell-20">Weight Units:</div>
		<div class="grid-cell-last grid-cell-80">
            <input type="radio" name="weightUnits" id="weightUnits1" data-bind="checked: weightUnits" value="kg" /><label for="weightUnits1"> kilograms</label><br />
            <input type="radio" name="weightUnits" id="weightUnits2" data-bind="checked: weightUnits" value="lbs" /><label for="weightUnits2"> pounds</label><br />
            <input type="radio" name="weightUnits" id="weightUnits3" data-bind="checked: weightUnits" value="st" /><label for="weightUnits3"> stones and pounds</label>
         </div>
		<div class="grid-cell-end"></div>
	</div>
	<div class="grid-row">
		<div class="grid-cell grid-cell-20">
            @if (Context.HasUserAccountWeight()) {
            <a href="@Url.Action("profile", "user")" title="Edit your profile and update your weight">Weight:</a>
            } else {
            <text>Weight:</text>
            }
        </div>
		<div class="grid-cell-last grid-cell-80">
            <span data-bind="visible: weightUnits() == 'kg'"><input type="number" min="0.0" step="any" data-bind="value: weightKg, valueUpdate: 'afterkeydown'" id="weightKg" /> kg</span>
            <span data-bind="visible: weightUnits() == 'lbs'"><input type="number" min="0.0" step="any" data-bind="value: weightLbs, valueUpdate: 'afterkeydown'" id="weightLbs" /> lbs</span>
            <span data-bind="visible: weightUnits() == 'st'"><input type="number" min="0.0" step="any" data-bind="value: weightSt, valueUpdate: 'afterkeydown'" id="weightSt" class="short" /> st <input type="number" min="0.0" step="any" data-bind="value: weightStLbs, valueUpdate: 'afterkeydown'" id="weightStLbs" class="short" /> lbs</span>
        </div>
		<div class="grid-cell-end"></div>
	</div>
    <div class="grid-row grid-row-separator"></div>
	<div class="grid-row">
		<div class="grid-cell grid-cell-20"><strong>Calories burned:</strong></div>
		<div class="grid-cell-last grid-cell-80"><strong  data-bind="text: calories"></strong></div>
		<div class="grid-cell-end"></div>
	</div>
</div>
